(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{126:function(t,e,n){t.exports=n.p+"34ae73c44911a76099f396c0d7e6bdd4.mp4"},312:function(t,e,n){var o=n(92);"string"==typeof o&&(o=[[t.i,o,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0},r=n(314)(o,i);o.locals&&(t.exports=o.locals),t.hot.accept(92,function(){var e=n(92);if("string"==typeof e&&(e=[[t.i,e,""]]),!function(t,e){var n,o=0;for(n in t){if(!e||t[n]!==e[n])return!1;o++}for(n in e)o--;return 0===o}(o.locals,e.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");r(e)}),t.hot.dispose(function(){r()})},316:function(t,e,n){t.exports=n.p+"825f0f0bc72022de969cc4b7247fff85.mp4"},317:function(t,e,n){t.exports=n.p+"71ad43b1d68af2d657671a5b2b1d2ed1.mp4"},318:function(t,e,n){t.exports=n.p+"20f3008d67a12c8a5447f6cd4efdbb95.mp4"},319:function(t,e,n){t.exports=n.p+"ff6c4ff004eaa795afda389ccb4eedf6.mp4"},320:function(t,e,n){t.exports=n.p+"3b5595faf6bccc73abd6e0b5970116dd.mp4"},321:function(t,e,n){t.exports=n.p+"510c4745734adb983a25f3a8b2b4dc88.mp4"},323:function(t,e,n){"use strict";n.r(e);n(140),n(312);function o(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function i(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var r=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.events=[]}var e,n,r;return e=t,(n=[{key:"on",value:function(t,e){this.events[t]=this.events.hasOwnProperty(t)?[].concat(o(this.events[t]),[e]):[e]}},{key:"off",value:function(t,e){this.events.hasOwnProperty(t)&&(this.events[t]=this.events[t].filter(function(t){return t!==e}))}},{key:"emit",value:function(t,e){var n=this;this.events.hasOwnProperty(t)&&this.events[t].forEach(function(o){o(e),o.once&&n.off(t,o)})}},{key:"once",value:function(t,e){e.once=!0,this.on(t,e)}}])&&i(e.prototype,n),r&&i(e,r),t}(),a=new r;function s(t){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function l(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function p(t){return t}new(function(t){function e(t){var n,o,i;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),o=this,(n=!(i=c(e).call(this))||"object"!==s(i)&&"function"!=typeof i?l(o):i).lastY=window.scrollY,n.onScroll=n.onScroll.bind(l(n)),t&&n.enable(),n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(e,r),n=e,(o=[{key:"onScroll",value:function(){var t,e,n,o;e=window.scrollY,t=(n=this.lastY-e)>0?1:-1,o=Date.now()-this.startTime,this.emit("scroll",new p({deltaY:n,timeDelta:o,direction:t,lastY:void 0,y:e})),this.lastY=e,this.startTime=Date.now()}},{key:"enable",value:function(){window.addEventListener("scroll",this.onScroll)}},{key:"disable",value:function(){window.removeEventListener("scroll",this.onScroll)}}])&&u(n.prototype,o),i&&u(n,i),e}())(!0);function h(t,e,n,o,i){var r=n-e;return(t-e)/r*(i-o)+o}function y(t,e,n,o,i){return function(t,e,n){return Math.min(n,Math.max(e,t))}(h.apply(void 0,arguments),o,i)}function d(t){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function b(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function m(t){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function v(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function g(t,e){return(g=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}new(function(t){function e(t){var n,o,i;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),o=this,(n=!(i=m(e).call(this))||"object"!==d(i)&&"function"!=typeof i?v(o):i).onKeyDown=n.onKeyDown.bind(v(n)),n.onKeyUp=n.onKeyUp.bind(v(n)),n.rangeEnabled=!0,t&&n.enable(),n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&g(t,e)}(e,r),n=e,(o=[{key:"onKeyDown",value:function(t){var e=t.keyCode,n=t.key;this.emit(e),this.emit("keydown:".concat(n)),this.emit("keydown:".concat(e))}},{key:"onKeyUp",value:function(t){var e=this,n=t.keyCode,o=t.key;this.emit(n),this.emit("keyup:".concat(o)),this.emit("keyup:".concat(n)),this.rangeEnabled&&Object.keys(this.events).forEach(function(t){if(t.includes("range")){var o=t.split(":");o.shift(),console.log(n-o[0],e.events[t]),i=n,r=Number(o[0]),a=Number(o[1]),i>=r&&i<=a&&i&&(console.log(n,o[0],n-o[0]+1,e.events[t]),e.events[t].forEach(function(t){return t(n-o[0])}))}var i,r,a})}},{key:"press",value:function(t,e){this.on("keydown:".concat(t),e)}},{key:"release",value:function(t,e){this.on("keyup:".concat(t),e)}},{key:"onRange",value:function(t,e){this.on("range:".concat(t[0],":").concat(t[1]),e)}},{key:"disableRange",value:function(){this.rangeEnabled=!1}},{key:"enableRange",value:function(){this.rangeEnabled=!0}},{key:"enable",value:function(){window.addEventListener("keydown",this.onKeyDown),window.addEventListener("keyup",this.onKeyUp)}},{key:"disable",value:function(){window.removeEventListener("keydown",this.onKeyDown),window.removeEventListener("keyup",this.onKeyUp)}}])&&b(n.prototype,o),i&&b(n,i),e}())(!0);function w(t){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function x(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function O(t){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function k(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function j(t,e){return(j=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}new(function(t){function e(t,n){var o,i,r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),i=this,(o=!(r=O(e).call(this))||"object"!==w(r)&&"function"!=typeof r?k(i):r).x=t.innerWidth/2,o.y=t.innerHeight/2,o.onMouseMove=o.onMouseMove.bind(k(o)),o.target=t,n&&o.enable(),o}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&j(t,e)}(e,r),n=e,(o=[{key:"onMouseMove",value:function(t){var e=t.clientX,n=t.clientY;this.emit("mouse",{lastX:this.x,lastY:this.y,x:e,y:n}),this.x=e,this.y=n}},{key:"enable",value:function(){this.target.addEventListener("mousemove",this.onMouseMove)}},{key:"disable",value:function(){this.target.removeEventListener("mousemove",this.onMouseMove)}}])&&x(n.prototype,o),i&&x(n,i),e}())(window);var P={general:{introduction:"Currently creating digital experiences at DWARF. He works in the crossfield between brand identity  & visual design creating strategicly branded experiences.",phone:"27624330",linkedin:"http://linkedin.com/in/nicklasnordby",instagram:"http://instagram.com/nicklasnordby",name:"Nicklas Nordby Andersen",title:"Visual designer",subtitle:"Hyper Island Graduate"},sections:[{title:"Introduction"},{title:"Work Experience"},{title:"Education"},{title:"International Collaboration"}],tables:[{keys:["Agency & year","Role"],values:[["DWARF  2018-2019","Visual designer at (DWARF).  Leading digital identity / design work for everything to big national companies to international start-ups."],["e-Types  2016-2017","Digital designer at e-Types. Building brand experiences and digital platforms. From concept to delivery."],["Kurppa Hosk  2015-2016","Internship as visual designer at the acclaimed design agency Kurppa Hosk in Stockholm. Learning from the best."],["Hyper Island  2015 — 2016","Both education & experience working on real briefs for real clients as an interactive art director at Hyper Island in Stockholm"]]}],projects:[{title:"ヂーアール",headline:"Kammeradvokaten",subtitle:"Frontend-development",grid:{x:5,z:10},video:n(126)},{title:"ヂーアール",headline:"YEEZY",subtitle:"Prototyping, WebGL, Concept development",grid:{x:9,z:3},video:n(316)},{title:"ヂーアール",headline:"Dwarf",subtitle:"Prototyping, Identity",grid:{x:9,z:3},video:n(317)},{title:"ヂーアール",headline:"DR Ramasjang",subtitle:"Prototyping, WebGL, Motion design",grid:{x:12,z:12},video:n(318)},{title:"ヂーアール",headline:"Sonzai",subtitle:"Prototyping, P5, Design",grid:{x:5,z:15},video:n(319)},{title:"ヂーアール",headline:"Covify",subtitle:"Processing, Concept development",grid:{x:16,z:4},video:n(320)},{title:"ヂーアール",headline:"Nordeca",subtitle:"Motion design, P5",grid:{x:10,z:10},video:n(321)}]};function S(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var _=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"div",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object.assign(this,{type:e,content:n,attributes:o}),this.children=[],this.createElement()}var e,n,o;return e=t,o=[{key:"assignAttributes",value:function(t,e){for(var n in e)t.setAttribute(n,e[n])}}],(n=[{key:"createElement",value:function(){this.el=document.createElement(this.type),this.el.innerHTML=this.content}},{key:"mountOn",value:function(t){t.appendChild(this.el)}},{key:"mountChild",value:function(t){this.children.push(t),this.mountChildOn(this.el,t.el),t.parent=this}},{key:"mountChildOn",value:function(t,e){t.appendChild(e)}},{key:"addClass",value:function(){var t,e;(t=console).log.apply(t,arguments),(e=this.el.classList).add.apply(e,arguments)}},{key:"find",value:function(t,e){return e?this.el.querySelectorAll(t):this.el.querySelector(t)}},{key:"bounds",get:function(){return this.el.getBoundingClientRect()}},{key:"width",get:function(){return this.el.offsetWidth}},{key:"height",get:function(){return this.el.offsetHeight}}])&&S(e.prototype,n),o&&S(e,o),t}();function E(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var T=new(function(){function t(e){var n=e.immediate,o=void 0!==n&&n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.ticks=[],this.startTime=null,this.elapsedTime=null,this.lastTime=null,this.delta=null,this.update=this.update.bind(this),o&&this.start()}var e,n,o;return e=t,(n=[{key:"start",value:function(){this.startTime=Date.now(),this.update()}},{key:"add",value:function(t){this.ticks.push(t)}},{key:"removeTick",value:function(t){this.ticks=this.ticks.filter(function(e){return e!==t})}},{key:"update",value:function(){var t=this;this.delta=Date.now()-this.lastTime,this.lastTime=Date.now(),this.elapsedTime=this.lastTime-this.startTime,this.ticks.filter(Boolean).forEach(function(e){e(t)}),requestAnimationFrame(this.update)}}])&&E(e.prototype,n),o&&E(e,o),t}())({immediate:!0}),C=n(127),z=n(48);function I(t){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function M(t,e){if(null==t)return{};var n,o,i=function(t,e){if(null==t)return{};var n,o,i={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}function A(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function L(t,e){return!e||"object"!==I(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function R(t){return(R=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function D(t,e){return(D=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var F=["#555555"],Y=function(t){function e(){var t,n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=L(this,R(e).call(this,"div"))).active=!1,(t=n).addClass.apply(t,arguments),document.body.classList.add("custom-cursor"),n.setupElements(),n.attachEventListeners(),n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&D(t,e)}(e,_),n=e,(o=[{key:"setupElements",value:function(){var t=this;this.inner=new _("div"),this.inner.addClass("inner-layer"),this.mountChild(this.inner),this.outer=new _("div"),this.outer.addClass("outer-layer"),F.forEach(function(e){var n=new _("div");n.addClass("layer"),n.el.style.borderColor=e,t.outer.mountChild(n)}),this.mountChild(this.outer)}},{key:"attachEventListeners",value:function(){window.addEventListener("mousemove",this.onMouseMove.bind(this)),T.add(this.update.bind(this))}},{key:"onMouseMove",value:function(t){var e=this,n=t.clientX,o=t.clientY,i=t.target;t.currentTarget,M(t,["clientX","clientY","target","currentTarget"]);C.a.staggerTo(this.children.map(function(t){return t.el}),.4,{x:n-this.width/2,y:o-this.height/2,ease:Power1.easeOut,onComplete:function(){C.a.to(e.inner.el,1,{opacity:.5,ease:Power1.easeIn})}},.01),this.detectFocus(i)}},{key:"detectFocus",value:function(t){t.dataset.cursor?this.focus(t.dataset.cursor):this.blur()}},{key:"focus",value:function(){var t=this;C.a.killTweensOf(this.outer.el,{opacity:!0}),C.a.to(this.outer.el,.5,{scale:2,opacity:.75,onStart:function(){t.active=!0},ease:z.a.easeOut})}},{key:"blur",value:function(){var t=this;C.a.to(this.outer.el,.5,{scale:1,opacity:.25,onStart:function(){t.active=!1}})}},{key:"update",value:function(t){t.elapsedTime;this.isActive}},{key:"toggle",value:function(t){this.$el.classList.toggle(t)}}])&&A(n.prototype,o),i&&A(n,i),e}(),W=n(0),H=n(20);function K(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var B=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.camera,o=e.effects,i=e.scene,r=e.startSetup,a=e.startRender;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.base=new W.T,this.composer=new H.f(this.base),this.camera=n,this.scene=i,this.effects=o,this.el=this.base.domElement,r&&(this.setupEffects(),this.setupComposer(n.cam,i)),a&&T.add(this.render.bind(this))}var e,n,o;return e=t,(n=[{key:"setupEffects",value:function(){this.vignette=new H.j({darkness:.3}),this.chra=new H.e,this.bokeh=new H.c({focus:.75}),this.noise=new H.h({blendFunction:H.a.SOFT_LIGHT,premultiply:!0}),this.contrast=new H.d({contrast:.25,brightness:-.1})}},{key:"setupComposer",value:function(t,e){this.composer.setSize(window.innerWidth,window.innerHeight),this.effectPass=new H.g(t,new H.b,this.chra,this.contrast,this.vignette),this.effectPass.renderToScreen=!0,this.composer.addPass(new H.i(e,t)),this.composer.addPass(this.effectPass)}},{key:"render",value:function(t){var e=t.delta;this.composer.render(.1*e)}}])&&K(e.prototype,n),o&&K(e,o),t}();n(324);function U(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function N(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var X=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.cam=new W.B(75,window.innerWidth/window.innerHeight,.1,1e3),this.position.z=-58,this.position.y=-20,this.position.x-=1,this.rotate(3,{x:.25*-Math.PI}),this.move(5,{z:43.5,y:32,onComplete:function(){}})}var e,n,o;return e=t,(n=[{key:"add",value:function(){var t;(t=this.scene).add.apply(t,arguments)}},{key:"stop",value:function(){z.b.killTweensOf(this.cam.position)}},{key:"move",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};z.b.to(this.cam.position,t,e)}},{key:"rotate",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};z.b.to(this.cam.rotation,t,e)}},{key:"smoothLookAt",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=(new W.m).copy(this.cam.rotation);this.cam.lookAt(t);var i=(new W.m).copy(this.cam.rotation);this.cam.rotation.copy(o),this.rotate(e,function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),o.forEach(function(e){U(t,e,n[e])})}return t}({x:i.x,y:i.y,z:i.z},n))}},{key:"getDistance",value:function(t){var e=t.position;return{x:Math.abs(e.x-this.x),y:Math.abs(e.y-this.y),z:Math.abs(e.z-this.z),total2d:Math.sqrt(Math.abs(e.x-this.x)+Math.abs(e.z-this.z)),total3d:this.cam.position.distanceTo(e)}}},{key:"x",set:function(t){this.cam.position.x=t},get:function(){return this.cam.position.x}},{key:"y",set:function(t){this.cam.position.y=t},get:function(){return this.cam.position.y}},{key:"z",set:function(t){this.cam.position.z=t},get:function(){return this.cam.position.z}},{key:"position",get:function(){return this.cam.position}}])&&N(e.prototype,n),o&&N(e,o),t}();function G(t){return(G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function q(t,e){return!e||"object"!==G(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function V(t){return(V=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function $(t,e){return($=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var J=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=q(this,V(e).call(this))).background=new W.h(14540270),t.fog=new W.o(11184844,-10,50),t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&$(t,e)}(e,W["I"]),e}();var Z=new function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.camera=new X,this.scene=new J,this.renderer=new B({camera:this.camera,scene:this.scene,startSetup:!0,startRender:!0}),this.textureLoader=new W.L},Q=Z.camera,tt=Z.renderer,et=Z.scene;Z.textureLoader;function nt(t){return(nt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ot(t,e){return!e||"object"!==nt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function it(t){return(it=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function rt(t,e){return(rt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var at=function(t){function e(){var t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);for(var n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return ot(this,(t=it(e)).call.apply(t,[this].concat(o)))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&rt(t,e)}(e,W["p"]),e}();function st(t){return(st="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ut(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function ct(t){return(ct=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function lt(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function ft(t,e){return(ft=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var pt=function(t){function e(){var t,n,o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),n=this,(t=!(o=ct(e).call(this))||"object"!==st(o)&&"function"!=typeof o?lt(n):o).name="lights",t.setupAmbientLight(),t.setupPointLight(),et.add(lt(t)),T.add(t.animate.bind(lt(t))),t}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ft(t,e)}(e,at),n=e,(o=[{key:"setupAmbientLight",value:function(){this.ambient=new W.a(15856127,.25),this.add(this.ambient)}},{key:"setupPointLight",value:function(){this.point=new W.D(4210756,1,1e3),this.point.position.set(0,60,0),this.point.castShadow=!0,this.add(this.point),this.point2=new W.D(4210756,2,1200),this.add(this.point2)}},{key:"animate",value:function(t){var e=t.elapsedTime;this.point.position.x=60*Math.sin(.001*e),this.point2.position.copy(Q.position)}}])&&ut(n.prototype,o),i&&ut(n,i),e}(),ht=n(1);function yt(t){return(yt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function dt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function bt(t){return(bt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function mt(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function vt(t,e){return(vt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var gt=function(t){function e(t){var n,o,i,r=t.x,a=t.z,s=t.gap,u=t.size,c=t.texture,l=t.geo,f=t.mat,p=t.height,h=t.gridIndex;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),o=this,(n=!(i=bt(e).call(this))||"object"!==yt(i)&&"function"!=typeof i?mt(o):i).name="pillar",Object.assign(mt(n),{x:r,z:a,gap:s,texture:c,geo:l,mat:f,size:u,height:p,gridIndex:h}),n.position.set(r*(u+s),.5*p,a*(u+s)),n.castShadow=!0,n.setupPillar(),T.add(n.update.bind(mt(n))),n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&vt(t,e)}(e,at),n=e,(o=[{key:"setupPillar",value:function(){var t=new W.v({color:16777215});this.mesh=new W.u(this.geo,t),this.mesh.castShadow=!0,this.mesh.receiveShadow=!0,this.add(this.mesh)}},{key:"interpolate",value:function(t){return y(t,15,35,.1,1)}},{key:"choose",value:function(){var t=this;this.chosen=!0,C.a.to(this.scale,1,{y:.25,x:6.5,z:.1,ease:ht.d.easeInOut}),C.a.to(this.position,1,{y:6,onStart:function(){t.wiggle=!1},onComplete:function(){C.a.to(t.position,2,{y:7,yoyo:!0,ease:Power1.easeInOut,repeat:-1})},ease:ht.d.easeInOut}),C.a.to(this.rotation,1,{y:.075*-Math.PI,ease:ht.d.easeOut})}},{key:"revert",value:function(){var t=this;this.chosen=!1,C.a.killTweensOf(this.position),C.a.to(this.position,1,{y:0,onComplete:function(){t.startWiggle(),t.mesh.material.map=null,t.mesh.material.needsUpdate=!0},ease:ht.d.easeInOut}),C.a.to(this.rotation,1,{y:0,ease:ht.d.easeIn})}},{key:"update",value:function(t){this.chosen?this.float(t):this.updateScale(t)}},{key:"float",value:function(t){t.elapsedTime}},{key:"updateScale",value:function(t){var e=t.elapsedTime,n=(new W.P).setFromMatrixPosition(this.matrixWorld).distanceTo(Q.position);this.scale.y!==this.interpolate(n)&&(C.a.to(this.scale,.5,{y:this.interpolate(n),x:1,z:1}),this.wiggle&&(this.position.y=y(Math.sin(.002*e+this.gridIndex.x+this.gridIndex.z),-1,1,-.5,0)*this.wiggleAmount),this.wiggle&&(this.rotation.z=y(Math.sin(.002*e-this.gridIndex.x+this.gridIndex.z),-1,1,.025*-Math.PI,.025*Math.PI)*this.scale.y*this.wiggleAmount))}},{key:"startWiggle",value:function(){this.wiggle=!0,this.wiggleAmount=0,C.a.to(this,5,{wiggleAmount:1,ease:ht.c.easeIn})}},{key:"setUV",value:function(){this.mesh.material.map=this.texture,this.mesh.material.needsUpdate=!0}},{key:"color",get:function(){return this.mesh.material.color}}])&&dt(n.prototype,o),i&&dt(n,i),e}();function wt(t){return(wt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function xt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Ot(t){return(Ot=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function kt(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function jt(t,e){return(jt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Pt=function(t){function e(){var t,n,o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),n=this,(t=!(o=Ot(e).call(this))||"object"!==wt(o)&&"function"!=typeof o?kt(n):o).waveCount=0,t.name="grid",t.setupVideo(),t.setupGrid(),et.add(kt(t)),t}var o,i,r;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&jt(t,e)}(e,at),o=e,(i=[{key:"setupVideo",value:function(){this.video=document.createElement("video"),this.video.classList.add("texture"),this.video.loop=!0,this.video.muted=!0,this.video.src=n(126),document.body.appendChild(this.video),this.texture=new W.R(this.video),this.texture.minFilter=W.q,this.texture.magFilter=W.q,this.texture.wrapT=W.g,this.texture.wrapS=W.g,this.texture.format=W.G,this.video.play()}},{key:"setupGrid",value:function(){var t=new W.d(2,30,2);this.pillars=[];for(var e=0;e<31;e++)for(var n=0;n<31;n++){var o=new gt({gridIndex:{x:e,z:n},geo:t,texture:this.texture,height:30,size:2,gap:1,x:e,z:n});this.pillars.push(o),this.add(o)}this.boundingBox=(new W.c).setFromObject(this),this.position.x-=.5*Math.abs(this.boundingBox.min.x-this.boundingBox.max.x),this.position.z-=.5*Math.abs(this.boundingBox.min.z-this.boundingBox.max.z),et.updateMatrixWorld(),this.startAnimation()}},{key:"stopAnimation",value:function(){this.animating=!1}},{key:"startAnimation",value:function(){var t=this;this.animating=!0,this.staggerTween=C.a.staggerTo(this.pillars.map(function(t){return t.position}),2,{y:12,yoyo:!0,repeat:-1,ease:Power1.easeInOut,onRepeat:function(){t.waveCount++,t.waveCount>=3*t.pillars.length&&t.stopAnimation(),t.animating||(C.a.killTweensOf(t.pillars.map(function(t){return t.position})),Q.move(3,{y:7,ease:ht.d.easeInOut}),Q.rotate(3,{x:0,ease:ht.d.easeInOut}),C.a.to(t.pillars.map(function(t){return t.position}),3,{y:0,onComplete:function(){t.pillars.forEach(function(t){t.startWiggle()})},ease:Power1.easeInOut}))},stagger:{from:"center",grid:[30,30],amount:1}})}},{key:"toPillarAt",value:function(t,e,n){var o=this,i=this.pillars.find(function(n){return n.gridIndex.x===t&&n.gridIndex.z===e}),r=(new W.P).setFromMatrixPosition(i.matrixWorld);r.x-=3,r.y+=0,r.z+=10,Q.move(1,{y:3,yoyo:!0,repeat:1,ease:Sine.easeInOut}),Q.move(2,{z:r.z,x:r.x,ease:ht.c.easeInOut,onStart:function(){o.video.src=n.video,o.video.play(),o.pillars.forEach(function(t){t.chosen&&t.revert()}),i.setUV(),i.choose()},onComplete:function(){}})}}])&&xt(o.prototype,i),r&&xt(o,r),e}();function St(t){return(St="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Et(t,e){return!e||"object"!==St(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Tt(t){return(Tt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ct(t,e){return(Ct=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var zt=new(function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=Et(this,Tt(e).call(this,"div"))).setup(),t.addElements(),t}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ct(t,e)}(e,_),n=e,(o=[{key:"setup",value:function(){var t=this;this.el.appendChild(tt.el),window.addEventListener("keyup",function(e){var n=e.key;console.log(n),"ArrowRight"===n&&t.next(),"ArrowLeft"===n&&t.previous()})}},{key:"addElements",value:function(){this.elements=[new Pt,new pt]}},{key:"next",value:function(){this.currentIndex++}},{key:"previous",value:function(){this.currentIndex--}},{key:"goToProject",value:function(t){this.elements.find(function(t){return"grid"===t.name}).toPillarAt(Math.round(h(Math.random(),0,1,5,25)),Math.round(h(Math.random(),0,1,5,25)),P.projects[this.currentIndex])}},{key:"currentIndex",get:function(){return this._index||0},set:function(t){this._index=t%P.projects.length,this.goToProject(t),a.emit("change-project",P.projects[this._index])}}])&&_t(n.prototype,o),i&&_t(n,i),e}()),It=n(53);function Mt(t){return(Mt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function At(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function Lt(t){return(Lt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Rt(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Dt(t,e){return(Dt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Ft=function(t){function e(){var t,n,o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),n=this,(t=!(o=Lt(e).call(this,"div"))||"object"!==Mt(o)&&"function"!=typeof o?Rt(n):o).addClass("project-view"),t.setupElements(),a.on("change-project",t.changeProject.bind(Rt(t))),t.enterIntro(),t}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Dt(t,e)}(e,_),n=e,(o=[{key:"setupElements",value:function(){this.title=new _("h2","ハキムです"),this.title.mountOn(this.el),this.headline=new _("h1","Hakim Mazouz"),this.headline.mountOn(this.el),this.subtitle=new _("h3","Designer & Developer"),this.subtitle.mountOn(this.el)}},{key:"enterIntro",value:function(){this.timeline=new It.a({paused:!0}),this.timeline.delay(1.5).staggerFromTo(this.el.childNodes,2,{y:-200,opacity:0,scale:1.5},{y:0,opacity:1,transformOrigin:"center",clearProps:"all",scale:1},.1).play()}},{key:"changeProject",value:function(t){var e=this;console.log(t),this.leave(function(){e.addClass("project-mode"),e.title.el.innerText=t.title,e.headline.el.innerText=t.headline,e.subtitle.el.innerText=t.subtitle,e.enter()})}},{key:"enter",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){};this.timeline=new It.a({paused:!0}),this.timeline.delay(.5).staggerFromTo(this.el.childNodes,1.5,{x:-250,y:100,rotationY:45,scale:.75,opacity:0},{x:0,y:0,scale:1,rotationY:0,opacity:1,ease:Power4.easeOut},.05).add(t).play()}},{key:"leave",value:function(t){this.timeline=new It.a({paused:!0}),this.timeline.staggerTo(this.el.childNodes,.5,{x:-250,y:-100,rotationY:-45,scale:.75,opacity:0,ease:Power4.easeIn},.05).add(t).play()}}])&&At(n.prototype,o),i&&At(n,i),e}();function Yt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Wt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.el=e,window.$app=this,this.setup()}var e,n,o;return e=t,(n=[{key:"setup",value:function(){zt.mountOn(this.el),(new Ft).mountOn(this.el),this.cursor=new Y("cursor-layer"),this.cursor.mountOn(this.el)}}])&&Yt(e.prototype,n),o&&Yt(e,o),t}();window.$app=new Wt(document.getElementById("app"))},92:function(t,e,n){(t.exports=n(313)(!1)).push([t.i,'* {\n  box-sizing: border-box;\n  -webkit-font-smoothing: antialiased;\n  padding: 0;\n  margin: 0; }\n\nhtml,\nbody {\n  padding: 0;\n  margin: 0; }\n\nbody {\n  font-family: "Termina", sans-serif;\n  font-size: 16px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n  body.custom-cursor {\n    cursor: none; }\n  body canvas {\n    position: fixed;\n    top: 0;\n    left: 0; }\n  body video.texture {\n    display: none; }\n  body #app {\n    perspective: 1000px; }\n\n.cursor-layer {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 60px;\n  height: 60px;\n  z-index: 99;\n  border-radius: 100%;\n  pointer-events: none; }\n  .cursor-layer .outer-layer {\n    height: 100%;\n    width: 100%;\n    opacity: .25; }\n    .cursor-layer .outer-layer .layer {\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n      border-radius: 100%;\n      border-width: 1px;\n      border-style: solid;\n      border-color: transparent; }\n  .cursor-layer .inner-layer {\n    position: absolute;\n    left: calc(50% - 5px);\n    opacity: 0.75;\n    top: calc(50% - 5px);\n    height: 10px;\n    width: 10px;\n    border-radius: 100%;\n    background-color: black; }\n\n#navigation {\n  font-family: "Termina", sans-serif;\n  font-weight: 500;\n  position: fixed;\n  bottom: 20px;\n  left: 20px;\n  font-size: 20px; }\n  #navigation .navigation-item {\n    list-style: none;\n    margin: 0;\n    line-height: 1.3;\n    opacity: 0.5; }\n  @media (min-width: 992px) {\n    #navigation {\n      left: calc(100vw / 16);\n      font-size: 24px;\n      bottom: 10vh; } }\n\n.background {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: -1; }\n  .background .dancing-circle {\n    display: none;\n    height: 50vmax;\n    width: 50vmax;\n    position: absolute;\n    right: 0;\n    border-radius: 100%;\n    background-color: #FF0000; }\n\n.hero {\n  margin: calc(100vw / 28.8) 15px; }\n  .hero .info {\n    font-size: 13px;\n    display: flex;\n    justify-content: space-between;\n    margin: calc(100vw / 28.8) 0 15vh;\n    opacity: 0.5; }\n    .hero .info li {\n      display: inline-block; }\n  .hero h1 {\n    font-size: 22px;\n    max-width: 600px; }\n  @media (min-width: 992px) {\n    .hero {\n      width: 50%;\n      margin-left: auto;\n      margin-right: calc(100vw / 28.8); }\n      .hero h1 {\n        font-size: 2.25vw; } }\n\n.curriculum-vitae {\n  margin: calc(100vw / 16) 0; }\n  .curriculum-vitae tr th, .curriculum-vitae tr td {\n    padding: 28px 0;\n    font-size: 14px;\n    border-bottom: 1px solid #D3C8C8;\n    text-align: left; }\n    .curriculum-vitae tr th:not(:first-child), .curriculum-vitae tr td:not(:first-child) {\n      padding-left: calc(100vw / 28.8); }\n    .curriculum-vitae tr th:first-child, .curriculum-vitae tr td:first-child {\n      white-space: nowrap; }\n  @media (min-width: 992px) {\n    .curriculum-vitae {\n      width: 50%;\n      margin-left: auto;\n      margin-right: calc(100vw / 28.8); } }\n\n.project-view {\n  padding: 60px;\n  color: #C22424;\n  mix-blend-mode: hard-light;\n  transform-origin: left center;\n  transform: translateX(-50%) rotateX(10deg);\n  position: fixed;\n  top: 0;\n  left: 50%;\n  width: 100%;\n  max-width: calc(100vw - 120px);\n  perspective: 1000px;\n  text-align: center; }\n  .project-view.project-mode {\n    text-align: left;\n    transform: translateX(-50%) rotateY(20deg) rotateX(10deg);\n    max-width: 100vw; }\n  .project-view h1 {\n    font-size: 60px;\n    text-transform: uppercase;\n    transform-origin: left center;\n    -webkit-text-stroke: 1px #C22424; }\n  .project-view h2 {\n    font-size: 40px;\n    color: black;\n    transform-origin: left center;\n    -webkit-text-stroke: 1px black;\n    -webkit-text-fill-color: transparent; }\n  .project-view h3 {\n    font-size: 18px;\n    text-transform: uppercase;\n    font-weight: 400;\n    margin-top: 20px;\n    transform-origin: left center;\n    color: black; }\n',""])}},[[323,0,1]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,